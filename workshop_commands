### Command list of commands for workshop
#
## Part2
# 2.3.1
tar zxvf  workspace.tar.gz

# 2.3.2
ls commands/installTools
sh commands/installTools


# 2.3.3
ls commands/verifyWorkshopFiles
sh commands/verifyWorkshopFiles

# 2.3.4
sh commands/configureC9Credentials

# 2.3.5
ls commands/setupGit
sh commands/setupGit

## Part3

# 3.1.2.1
sh commands/createEnvTemplate

# 3.1.2.2
sh commands/createProtonRepositoryLink

# 3.1.2.3
sh commands/checkOutEnvTempSkeletonCode

## start of files
## manifest.yaml
infrastructure:
  templates:
    - file: "cloudformation.yaml"
      rendering_engine: jinja
      template_language: cloudformation


## schema.yaml
schema:                            # required
  format:                          # required
    openapi: "3.0.0"               # required
  # required              defined by administrator
  environment_input_type: "PublicEnvironmentInput"
  types:                           # required
    # defined by administrator
    PublicEnvironmentInput:
      type: object
      description: "Input properties for my environment"
      properties:
        vpc_cidr:                   # parameter
          type: string
          description: "The CIDR range for your VPC"
          default: 10.0.0.0/16
          pattern: ([0-9]{1,3}\.){3}[0-9]{1,3}($|/(16|24))
        dns_hostname:               # parameter
          type: string
          description: "The hostname for the Route53 Hosted Zone"
          default: protonworkshop.hosted.local
## end of files


# 3.1.4.1
sh commands/codeV1EnvCfn


# 3.1.4.2
cd ~/environment/aws-proton-workshop-bundles/
sh ~/environment/commands/commitV1EnvTemplate

# 3.1.5.1
sh commands/syncEnvRepository2Proton

# 3.1.5.2
sh commands/publishV1EnvTemplate


# 3.1.6.1 
SPEC=$(cat <<-EOF
proton: EnvironmentSpec
spec:
  vpc_cidr: 10.0.0.0/16
  dns_hostname: protonworkshop.beta.local
EOF
);

echo $SPEC


# 3.1.6.2
aws proton create-environment \
  --region ${AWS_REGION} \
  --name "multi-svc-beta" \
  --template-name "multi-svc-env" \
  --template-major-version 1 \
  --proton-service-role-arn arn:aws:iam::${AWS_ACCOUNT_ID}:role/ProtonServiceRole \
  --spec "$SPEC"

# 3.2.1.1
sh commands/createServiceTemplate

# 3.2.1.2
sh commands/checkOutServiceTempSkeletonCode

# 3.2.2.1
sh commands/codeV1ServiceSchema

# 3.2.3
sh commands/codeV1ServicePipeline

# 3.2.4.1
sh commands/codeV1ServiceInstanceInfra

# 3.2.4.2
sh commands/setServiceCompatibleEnv

# 3.2.4.3
sh  commands/commitV1ServiceTemplate

# 3.2.5.1
sh commands/syncServiceRepository2Proton

# 3.2.5.2
sh commands/publishV1ServiceTemplate

# 3.2.6.1 
sh -c "~/environment/helper-script/proton-workshop-helper create --service_name frontend"

# 3.2.6.2 
sh -c "~/environment/helper-script/proton-workshop-helper create --service_name crystal"

# 3.2.6.3 
sh -c "~/environment/helper-script/proton-workshop-helper create --service_name nodejs"


# 3.3.1.1
cd ~/environment/aws-proton-workshop-bundles/
sh ~/environment/commands/patchEnvCfnMinor

# 3.3.1.2
cd ~/environment/aws-proton-workshop-bundles/
sh ~/environment/commands/patchServicesCfnMinor

# 3.3.2.1
cd ~/environment
sh commands/commitV1TemplateMinorChanges

# 3.3.2.2
cd ~/environment
sh commands/publishV1TemplateMinorChanges

# 3.3.3.1
cd ~/environment
sh commands/updateEnvToV1.1

# 3.3.3.2.1 
sh -c "~/environment/helper-script/proton-workshop-helper update --service_name frontend --deployment_type MINOR_VERSION"

# 3.3.3.2.2
sh -c "~/environment/helper-script/proton-workshop-helper update --service_name crystal --deployment_type MINOR_VERSION"

# 3.3.3.2.3
sh -c "~/environment/helper-script/proton-workshop-helper update --service_name nodejs --deployment_type MINOR_VERSION"
